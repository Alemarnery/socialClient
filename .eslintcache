[{"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\index.js":"1","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\App.js":"2","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\history.js":"3","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\index.js":"4","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\Header.js":"5","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\Footer.js":"6","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\Pages\\auth\\Register.js":"7","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\Pages\\auth\\Forgot.js":"8","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\Pages\\auth\\Login.js":"9","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\SocialButtons\\index.js":"10","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\ErrorMessage.js":"11"},{"size":2307,"mtime":1612912096766,"results":"12","hashOfConfig":"13"},{"size":756,"mtime":1613653719878,"results":"14","hashOfConfig":"13"},{"size":89,"mtime":1613605072961,"results":"15","hashOfConfig":"13"},{"size":322,"mtime":1613613292038,"results":"16","hashOfConfig":"13"},{"size":205,"mtime":1613613670693,"results":"17","hashOfConfig":"13"},{"size":155,"mtime":1613695145653,"results":"18","hashOfConfig":"13"},{"size":1615,"mtime":1613688666936,"results":"19","hashOfConfig":"13"},{"size":749,"mtime":1613688654878,"results":"20","hashOfConfig":"13"},{"size":2178,"mtime":1613694921048,"results":"21","hashOfConfig":"13"},{"size":4619,"mtime":1613614007015,"results":"22","hashOfConfig":"13"},{"size":165,"mtime":1613694351470,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1szxpui",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\index.js",["50"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDyCU5HUy_lBrNbTGL0Mpbm9py-5qrb8PU\",\n  authDomain: \"social-alemar95.firebaseapp.com\",\n  databaseURL: \"https://social-alemar95-default-rtdb.firebaseio.com/\",\n  projectId: \"social-alemar95\",\n  storageBucket: \"social-alemar95.appspot.com\",\n  messagingSenderId: \"1072738244794\",\n  appId: \"1:1072738244794:web:12669a19d8c2310206ca83\",\n  measurementId: \"G-L4SZ6FHG5T\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfirebase.auth().onAuthStateChanged(function (user) {\n  if (user) {\n    console.log(\"user is sing\");\n  } else {\n    console.log(\"No user is signed in\");\n  }\n});\n\n//**Confirm the link is a sign-in with email link*/\nif (firebase.auth().isSignInWithEmailLink(window.location.href)) {\n  // Additional state parameters can also be passed via URL.\n  // This can be used to continue the user's intended action before triggering\n  // the sign-in operation.\n  // Get the email if available. This should be available if the user completes\n  // the flow on the same device where they started it.\n  const email = window.localStorage.getItem(\"emailForSignIn\");\n  if (!email) {\n    // User opened the link on a different device. To prevent session fixation\n    // attacks, ask the user to provide the associated email again. For example:\n    email = window.prompt(\"Please provide your email for confirmation\");\n  }\n  // The client SDK will parse the code from the link for you.\n  firebase\n    .auth()\n    .signInWithEmailLink(email, window.location.href)\n    .then((result) => {\n      // Clear email from storage.\n      window.localStorage.removeItem(\"emailForSignIn\");\n      // You can access the new user via result.user\n      // Additional user info profile not available via:\n      // result.additionalUserInfo.profile == null\n      // You can check if the user is new or existing:\n      // result.additionalUserInfo.isNewUser\n    })\n    .catch((error) => {\n      // Some error occurred, you can inspect the code: error.code\n      // Common errors could be invalid email and invalid or expired OTPs.\n    });\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["51","52"],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\App.js",[],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\history.js",[],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\index.js",[],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\Header.js",[],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\Footer.js",[],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\Pages\\auth\\Register.js",["53","54"],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\Pages\\auth\\Forgot.js",[],"C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\Pages\\auth\\Login.js",["55"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport SocialButtons from \"../../components/SocialButtons\";\r\nimport Form from \"../../components/Form\";\r\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\r\n\r\nconst Login = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  return (\r\n    <Form\r\n      title=\"Sign In\"\r\n      links={\r\n        <>\r\n          <a href=\"/register\">\r\n            <i className=\"user icon\"></i>Don't have an account?\r\n          </a>\r\n          <a href=\"/forgot\" className=\"right floated\">\r\n            <i className=\"info icon\"></i>Forgot your password?\r\n          </a>\r\n        </>\r\n      }\r\n    >\r\n      <SocialButtons />\r\n      <form className=\"ui form error\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"required field\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: {\r\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\r\n                message: \"Must be a valid email\",\r\n              },\r\n            })}\r\n          />\r\n          {errors.email ? <ErrorMessage error={errors.email.message} /> : \" \"}\r\n        </div>\r\n\r\n        <div className=\"required field\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            type=\"password\"\r\n            ref={register({\r\n              required: \"required\",\r\n              minLength: {\r\n                value: 4,\r\n                message: \"Password must be between 4 and 20 caracters\",\r\n              },\r\n              maxLength: {\r\n                value: 20,\r\n                message: \"Password must be between 4 and 20 caracters\",\r\n              },\r\n            })}\r\n          />\r\n          <p>{errors.password?.message}</p>\r\n        </div>\r\n\r\n        <button className=\"ui button\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\SocialButtons\\index.js",["56","57","58","59","60","61","62","63","64","65","66"],"import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst SocialButtons = () => {\r\n  function googleLogin() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        console.log(`Hola User! ${result} `);\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        const credential = result.credential;\r\n\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        const token = credential.accessToken;\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const emailLogin = () => {\r\n    const actionCodeSettings = {\r\n      // URL you want to redirect back to. The domain (www.example.com) for this\r\n      // URL must be in the authorized domains list in the Firebase Console.\r\n      url: \"http://localhost:3000/\",\r\n      // This must be true.\r\n      handleCodeInApp: true,\r\n      iOS: {\r\n        bundleId: \"http://localhost:3000/\",\r\n      },\r\n      android: {\r\n        packageName: \"http://localhost:3000/\",\r\n        installApp: true,\r\n        minimumVersion: \"12\",\r\n      },\r\n      dynamicLinkDomain: \"socialAlem.page.link\",\r\n    };\r\n\r\n    const email = \"aleemar.95@gmail.com\";\r\n\r\n    firebase\r\n      .auth()\r\n      .sendSignInLinkToEmail(email, actionCodeSettings)\r\n      .then(() => {\r\n        // The link was successfully sent. Inform the user.\r\n        alert(\"Send Link to email\");\r\n        // Save the email locally so you don't need to ask the user for it again\r\n        // if they open the link on the same device.\r\n        window.localStorage.setItem(\"emailForSignIn\", email);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const facebookLogin = () => {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        console.log(`userLogin from facebook!!!`);\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        const credential = result.credential;\r\n\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        const accessToken = credential.accessToken;\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const twitterLogin = () => {\r\n    const provider = new firebase.auth.TwitterAuthProvider();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        console.log(`twitter signIn ${result}  `);\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        const credential = result.credential;\r\n\r\n        // This gives you a the Twitter OAuth 1.0 Access Token and Secret.\r\n        // You can use these server side with your app's credentials to access the Twitter API.\r\n        const token = credential.accessToken;\r\n        const secret = credential.secret;\r\n\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        const credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n\r\n  const signOut = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        // Sign-out successful.\r\n      })\r\n      .catch((error) => {\r\n        // An error happened.\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"field center aligned\">\r\n      <button className=\"ui negative basic button\" onClick={googleLogin}>\r\n        <i className=\"google  icon\"></i>\r\n        Google\r\n      </button>\r\n\r\n      <button className=\"ui secondary basic button\" onClick={emailLogin}>\r\n        <i className=\"envelope outline icon\"></i>\r\n        Email Link\r\n      </button>\r\n\r\n      <button className=\"ui facebook button\" onClick={facebookLogin}>\r\n        <i className=\"facebook icon\"></i>\r\n        Facebook\r\n      </button>\r\n\r\n      <button className=\"ui twitter button\" onClick={twitterLogin}>\r\n        <i className=\"facebook icon\"></i>\r\n        Twitter\r\n      </button>\r\n\r\n      <button onClick={signOut}>signOut</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialButtons;\r\n","C:\\Users\\Alemarnerys\\Downloads\\Proyectos\\Proyectos_de_Practica\\social\\client\\src\\components\\Form\\ErrorMessage.js",[],{"ruleId":"67","severity":1,"message":"68","line":39,"column":5,"nodeType":"69","messageId":"70","endLine":39,"endColumn":10},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":42,"column":13,"nodeType":"77","endLine":42,"endColumn":28},{"ruleId":"75","severity":1,"message":"76","line":52,"column":13,"nodeType":"77","endLine":52,"endColumn":24},{"ruleId":"75","severity":1,"message":"76","line":50,"column":13,"nodeType":"77","endLine":50,"endColumn":28},{"ruleId":"78","severity":1,"message":"79","line":18,"column":15,"nodeType":"69","messageId":"80","endLine":18,"endColumn":20},{"ruleId":"78","severity":1,"message":"81","line":20,"column":15,"nodeType":"69","messageId":"80","endLine":20,"endColumn":19},{"ruleId":"78","severity":1,"message":"81","line":73,"column":15,"nodeType":"69","messageId":"80","endLine":73,"endColumn":19},{"ruleId":"78","severity":1,"message":"82","line":76,"column":15,"nodeType":"69","messageId":"80","endLine":76,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":97,"column":15,"nodeType":"69","messageId":"80","endLine":97,"endColumn":20},{"ruleId":"78","severity":1,"message":"83","line":98,"column":15,"nodeType":"69","messageId":"80","endLine":98,"endColumn":21},{"ruleId":"78","severity":1,"message":"81","line":101,"column":15,"nodeType":"69","messageId":"80","endLine":101,"endColumn":19},{"ruleId":"78","severity":1,"message":"84","line":106,"column":15,"nodeType":"69","messageId":"80","endLine":106,"endColumn":24},{"ruleId":"78","severity":1,"message":"85","line":107,"column":15,"nodeType":"69","messageId":"80","endLine":107,"endColumn":27},{"ruleId":"78","severity":1,"message":"86","line":109,"column":15,"nodeType":"69","messageId":"80","endLine":109,"endColumn":20},{"ruleId":"78","severity":1,"message":"87","line":111,"column":15,"nodeType":"69","messageId":"80","endLine":111,"endColumn":25},"no-const-assign","'email' is constant.","Identifier","const","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'token' is assigned a value but never used.","unusedVar","'user' is assigned a value but never used.","'accessToken' is assigned a value but never used.","'secret' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]